#!/usr/bin/python3

# SecuML
# Copyright (C) 2016-2018  ANSSI
#
# SecuML is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# SecuML is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with SecuML. If not, see <http://www.gnu.org/licenses/>.

import argparse
import os
import sys

from SecuML.core.tools import colors_tools
from SecuML.core.tools import dir_tools

from SecuML.exp import db_tables
from SecuML.exp import ExperimentFactory
from SecuML.exp.data.ProjectDataset import ProjectDataset

from SecuML.exp.active_learning.ActiveLearningExperiment \
        import ActiveLearningExperiment
from SecuML.exp.active_learning.RareCategoryDetectionExperiment \
        import RareCategoryDetectionExperiment
from SecuML.exp.classification.ClassificationExperiment \
        import ClassificationExperiment
from SecuML.exp.clustering.ClusteringExperiment \
        import ClusteringExperiment
from SecuML.exp.conf.DatasetConf import DatasetConf
from SecuML.exp.features_analysis.FeaturesAnalysisExperiment \
        import FeaturesAnalysisExperiment
from SecuML.exp.projection.ProjectionExperiment import ProjectionExperiment
from SecuML.exp.SecuMLConf import SecuMLConf

from SecuML.core.tools.core_exceptions import SecuMLcoreException
from SecuML.exp.tools.exp_exceptions import SecuMLexpException

if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description='Delete the experiments for a given dataset in a project. '
                    'If no dataset is specified, all the experiments '
                    'of the project are deleted.')
    parser.add_argument('project')
    parser.add_argument('--dataset',
                        default=None)
    parser.add_argument('--experiment-id',
                        type=int,
                        default=None)
    parser.add_argument('--secuml-conf',
                        type=str,
                        default=None)
    args = parser.parse_args()
    try:
        secuml_conf = SecuMLConf(args.secuml_conf)
        session = secuml_conf.Session()
        if args.experiment_id is not None:
            factory = ExperimentFactory.getFactory()
            exp = factory.from_exp_id(args.experiment_id, secuml_conf, session)
            exp.remove()
        elif args.dataset is not None:
            dataset_conf = DatasetConf(args.project, args.dataset,
                                       secuml_conf.logger)
            dataset = ProjectDataset(dataset_conf, secuml_conf, session)
            dataset.remove()
        else:
            db_tables.removeProject(session, args.project)
            project_output_dir = os.path.join(secuml_conf.output_data_dir,
                                              args.project)
            dir_tools.removeDirectory(project_output_dir)
        session.commit()
        session.close()
    except (SecuMLcoreException, SecuMLexpException) as e:
        sys.stderr.write(colors_tools.display_in_red(e) + '\n')
        session.rollback()
        session.close()
        sys.exit(-1)
    except Exception as e:
        session.rollback()
        session.close()
        raise(e)
